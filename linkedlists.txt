//linked lists functions as array that can grow and shrink from any point in the array

//Linked lists have a few advantages over arrays:
    //Items can be added or removed from the middle of the list
    //There is no need to define an initial size  
//However, linked lists also have a few disadvantages: 
   // it is impossible to reach the nth item in the array without first iterating over all items up until that item.
    //we have to start from the beginning of the list
    //count how many times we advance in the list until we get to the desired item.
    //Dynamic memory allocation and pointers are required.
    //which complicates the code and increases the risk of memory leaks and segment faults.
    //Linked lists have a much larger overhead over arrays.
    //since linked list items are dynamically allocated (which is less efficient in memory usage) and each item in the list also must store an additional pointer.

//Linked list is set of dynamically allocated nodes
// in such way that each node contains one value and a pointer
// the pointer points to next member or node in a list or NULL
// if its NULL then it is the last node in the list.
// it is held using local pointer that points to first element of list
//if its null then the list is considered empty

